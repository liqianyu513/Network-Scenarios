from simulation import model as m
from simulation.model import NodeID, NodeInfo, VulnerabilityID, VulnerabilityInfo
from typing import Dict, Iterator, cast, Tuple

nodes = {
    '0': m.NodeInfo(
        services=[],
        value=0,
        properties=["PortRDPOpen", "Win7", "WMI", "Win10", "Linux"],
        agent_installed=True,
        privilege_level=m.PrivilegeLevel.NoAccess,
        reimagable=False,
        last_reimaging=None,
        owned_string='',
        sla_weight=1.0,
        firewall=m.FirewallConfiguration(outgoing=[m.FirewallRule("Win7", m.RulePermission.ALLOW),
                                                   m.FirewallRule("PortRDPOpen", m.RulePermission.ALLOW),
                                                   m.FirewallRule("WMI", m.RulePermission.ALLOW),
                                                   m.FirewallRule("RDP", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SSH", m.RulePermission.ALLOW),
                                                   m.FirewallRule("HTTPS", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Linux", m.RulePermission.ALLOW),
                                                   ],
                                         incoming=[m.FirewallRule("Win10", m.RulePermission.ALLOW),
                                                   m.FirewallRule("WMI", m.RulePermission.ALLOW),
                                                   m.FirewallRule("HTTP", m.RulePermission.ALLOW),
                                                   m.FirewallRule("HTTPS", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SSH", m.RulePermission.ALLOW),
                                                   m.FirewallRule("RDP", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SQL", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SMB", m.RulePermission.ALLOW),
                                                   ]),
        vulnerabilities=dict(
            UACME61=m.VulnerabilityInfo(
                description='UACME UAC bypass #61',
                type=m.VulnerabilityType.LOCAL,
                outcome=m.AdminEscalation(),
                rates=m.Rates(probingDetectionRate=0,
                              exploitDetectionRate=0.2,
                              successRate=1.0),
                URL='https://github.com/hfiref0x/UACME',
                reward_string=''
            ),
            RDPBF=m.VulnerabilityInfo(
                description='RDP Brute Force',
                type=m.VulnerabilityType.REMOTE,
                outcome=m.SystemEscalation(),
                rates=m.Rates(probingDetectionRate=0,
                              exploitDetectionRate=0.2,
                              successRate=1.0),
                URL='https://attack.mitre.org/techniques/T1110/',
                reward_string=''
            ),
            RecentlyAccessedMachines=m.VulnerabilityInfo(
                description='AzureVM info, including public IP address',
                type=m.VulnerabilityType.LOCAL,
                outcome=m.LeakedNodesId(['3', '4', '1']),
                rates=m.Rates(probingDetectionRate=0.0,
                              exploitDetectionRate=0.0,
                              successRate=1.0),
                URL='',
                reward_string=''
            ))
    ),
    '1': m.NodeInfo(
        services=[],
        value=80,
        properties=["Azure-VM", "GuestAccountEnabled", "Win10", "HyperV-VM", "PortRDPOpen",
                    "Win7", "Windows"],
        agent_installed=False,
        privilege_level=m.PrivilegeLevel.NoAccess,
        reimagable=True,
        last_reimaging=None,
        owned_string='',
        sla_weight=1.0,
        firewall=m.FirewallConfiguration(outgoing=[m.FirewallRule("SMB", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Windows", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Win7", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SQL", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Win10", m.RulePermission.ALLOW),
                                                   m.FirewallRule("WMI", m.RulePermission.ALLOW),
                                                   m.FirewallRule("HTTPS", m.RulePermission.ALLOW),
                                                   m.FirewallRule("RDP", m.RulePermission.ALLOW),
                                                   m.FirewallRule("GuestAccountEnabled", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Azure-VM", m.RulePermission.ALLOW),
                                                   m.FirewallRule("PortRDPOpen", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SSH", m.RulePermission.ALLOW),
                                                   ],
                                         incoming=[m.FirewallRule("HTTPS", m.RulePermission.ALLOW),
                                                   m.FirewallRule("HyperV-VM", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SQL", m.RulePermission.ALLOW),
                                                   m.FirewallRule("GuestAccountEnabled", m.RulePermission.ALLOW),
                                                   ]),
        vulnerabilities=dict(
            MimikatzLogonpasswords=m.VulnerabilityInfo(
                description='Mimikatz sekurlsa::logonpasswords.',
                type=m.VulnerabilityType.LOCAL,
                outcome=m.LeakedCredentials(credentials=[
                    m.CachedCredential(node='2',
                                       port="HTTPS",
                                       credential="HTTPSCreds")]),
                rates=m.Rates(probingDetectionRate=0,
                              exploitDetectionRate=1.0,
                              successRate=1.0),
                URL='https://github.com/gentilkiwi/mimikatz',
                reward_string=''
            ),
            CVE_2019_2729=m.VulnerabilityInfo(
                description='',
                type=m.VulnerabilityType.REMOTE,
                outcome=m.LocalUserEscalation(),
                rates=m.Rates(probingDetectionRate=0.0,
                              exploitDetectionRate=0.0,
                              successRate=1.0),
                URL='',
                reward_string=''
            ),
            RecentlyAccessedMachines=m.VulnerabilityInfo(
                description='AzureVM info, including public IP address',
                type=m.VulnerabilityType.LOCAL,
                outcome=m.LeakedNodesId(['0', '7', '2']),
                rates=m.Rates(probingDetectionRate=0.0,
                              exploitDetectionRate=0.0,
                              successRate=1.0),
                URL='',
                reward_string=''
            ))
    ),
    '2': m.NodeInfo(
        services=[m.ListeningService("HTTPS", allowedCredentials=["HTTPSCreds"])],
        value=56,
        properties=["HTTPS", "Linux", "PortRDPOpen", "HyperV-VM", "GuestAccountEnabled"],
        agent_installed=False,
        privilege_level=m.PrivilegeLevel.NoAccess,
        reimagable=True,
        last_reimaging=None,
        owned_string='',
        sla_weight=1.0,
        firewall=m.FirewallConfiguration(outgoing=[m.FirewallRule("Win10", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SSH", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Linux", m.RulePermission.ALLOW),
                                                   m.FirewallRule("RDP", m.RulePermission.ALLOW),
                                                   m.FirewallRule("WMI", m.RulePermission.ALLOW),
                                                   m.FirewallRule("HTTPS", m.RulePermission.ALLOW),
                                                   m.FirewallRule("HTTP", m.RulePermission.ALLOW),
                                                   m.FirewallRule("HyperV-VM", m.RulePermission.ALLOW),
                                                   m.FirewallRule("GuestAccountEnabled", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SMB", m.RulePermission.ALLOW),
                                                   m.FirewallRule("PortRDPOpen", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SQL", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Azure-VM", m.RulePermission.ALLOW),
                                                   ],
                                         incoming=[m.FirewallRule("PortRDPOpen", m.RulePermission.ALLOW),
                                                   m.FirewallRule("WMI", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Win10", m.RulePermission.ALLOW),
                                                   m.FirewallRule("GuestAccountEnabled", m.RulePermission.ALLOW),
                                                   m.FirewallRule("HTTP", m.RulePermission.ALLOW),
                                                   m.FirewallRule("HTTPS", m.RulePermission.ALLOW),
                                                   m.FirewallRule("HyperV-VM", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Azure-VM", m.RulePermission.ALLOW),
                                                   ]),
        vulnerabilities=dict(
            MimikatzLogonpasswords=m.VulnerabilityInfo(
                description='Mimikatz sekurlsa::logonpasswords.',
                type=m.VulnerabilityType.LOCAL,
                outcome=m.LeakedCredentials(credentials=[
                    m.CachedCredential(node='6',
                                       port="HTTP",
                                       credential="HTTPCreds")]),
                rates=m.Rates(probingDetectionRate=0,
                              exploitDetectionRate=1.0,
                              successRate=1.0),
                URL='https://github.com/gentilkiwi/mimikatz',
                reward_string=''
            ),
            RecentlyAccessedMachines=m.VulnerabilityInfo(
                description='AzureVM info, including public IP address',
                type=m.VulnerabilityType.LOCAL,
                outcome=m.LeakedNodesId(['6', '3', '1']),
                rates=m.Rates(probingDetectionRate=0.0,
                              exploitDetectionRate=0.0,
                              successRate=1.0),
                URL='',
                reward_string=''
            ))
    ),
    '3': m.NodeInfo(
        services=[],
        value=77,
        properties=["HyperV-VM", "Win7"],
        agent_installed=False,
        privilege_level=m.PrivilegeLevel.NoAccess,
        reimagable=True,
        last_reimaging=None,
        owned_string='',
        sla_weight=1.0,
        firewall=m.FirewallConfiguration(outgoing=[],
                                         incoming=[m.FirewallRule("PortRDPOpen", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SSH", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SQL", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Win10", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Linux", m.RulePermission.ALLOW),
                                                   m.FirewallRule("WMI", m.RulePermission.ALLOW),
                                                   m.FirewallRule("HyperV-VM", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Windows", m.RulePermission.ALLOW),
                                                   m.FirewallRule("HTTPS", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Win7", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SMB", m.RulePermission.ALLOW),
                                                   ]),
        vulnerabilities=dict(
            UACME67=m.VulnerabilityInfo(
                description='UACME UAC bypass #67 (fake system escalation) ',
                type=m.VulnerabilityType.LOCAL,
                outcome=m.SystemEscalation(),
                rates=m.Rates(probingDetectionRate=0,
                              exploitDetectionRate=0.2,
                              successRate=1.0),
                URL='https://github.com/hfiref0x/UACME',
                reward_string=''
            ),
            MS09_050=m.VulnerabilityInfo(
                description='',
                type=m.VulnerabilityType.REMOTE,
                outcome=m.AdminEscalation(),
                rates=m.Rates(probingDetectionRate=0.0,
                              exploitDetectionRate=0.0,
                              successRate=1.0),
                URL='',
                reward_string=''
            ),
            RecentlyAccessedMachines=m.VulnerabilityInfo(
                description='AzureVM info, including public IP address',
                type=m.VulnerabilityType.LOCAL,
                outcome=m.LeakedNodesId(['0', '2', '5']),
                rates=m.Rates(probingDetectionRate=0.0,
                              exploitDetectionRate=0.0,
                              successRate=1.0),
                URL='',
                reward_string=''
            ))
    ),
    '4': m.NodeInfo(
        services=[m.ListeningService("SSH", allowedCredentials=["SSHCreds"])],
        value=78,
        properties=["Linux", "SSH", "GuestAccountEnabled", "HyperV-VM", "Win7"],
        agent_installed=False,
        privilege_level=m.PrivilegeLevel.NoAccess,
        reimagable=True,
        last_reimaging=None,
        owned_string='',
        sla_weight=1.0,
        firewall=m.FirewallConfiguration(outgoing=[m.FirewallRule("SMB", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SSH", m.RulePermission.ALLOW),
                                                   ],
                                         incoming=[m.FirewallRule("PortRDPOpen", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Win10", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Win7", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SQL", m.RulePermission.ALLOW),
                                                   m.FirewallRule("HTTP", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Windows", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SSH", m.RulePermission.ALLOW),
                                                   m.FirewallRule("HTTPS", m.RulePermission.ALLOW),
                                                   m.FirewallRule("RDP", m.RulePermission.ALLOW),
                                                   ]),
        vulnerabilities=dict(
            UACME61=m.VulnerabilityInfo(
                description='UACME UAC bypass #61',
                type=m.VulnerabilityType.LOCAL,
                outcome=m.AdminEscalation(),
                rates=m.Rates(probingDetectionRate=0,
                              exploitDetectionRate=0.2,
                              successRate=1.0),
                URL='https://github.com/hfiref0x/UACME',
                reward_string=''
            ),
            RecentlyAccessedMachines=m.VulnerabilityInfo(
                description='AzureVM info, including public IP address',
                type=m.VulnerabilityType.LOCAL,
                outcome=m.LeakedNodesId(['7', '0', '5']),
                rates=m.Rates(probingDetectionRate=0.0,
                              exploitDetectionRate=0.0,
                              successRate=1.0),
                URL='',
                reward_string=''
            ))
    ),
    '5': m.NodeInfo(
        services=[],
        value=29,
        properties=["Azure-VM", "PortRDPOpen", "GuestAccountEnabled", "HyperV-VM", "Win7"],
        agent_installed=False,
        privilege_level=m.PrivilegeLevel.NoAccess,
        reimagable=True,
        last_reimaging=None,
        owned_string='',
        sla_weight=1.0,
        firewall=m.FirewallConfiguration(outgoing=[m.FirewallRule("SMB", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Windows", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Win7", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SSH", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Linux", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Azure-VM", m.RulePermission.ALLOW),
                                                   m.FirewallRule("RDP", m.RulePermission.ALLOW),
                                                   m.FirewallRule("HTTP", m.RulePermission.ALLOW),
                                                   ],
                                         incoming=[m.FirewallRule("GuestAccountEnabled", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SMB", m.RulePermission.ALLOW),
                                                   m.FirewallRule("HTTP", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Azure-VM", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Win7", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Win10", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Windows", m.RulePermission.ALLOW),
                                                   m.FirewallRule("WMI", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SSH", m.RulePermission.ALLOW),
                                                   m.FirewallRule("HyperV-VM", m.RulePermission.ALLOW),
                                                   m.FirewallRule("RDP", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SSH", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Linux", m.RulePermission.ALLOW),
                                                   ]),
        vulnerabilities=dict(
            MimikatzLogonpasswords=m.VulnerabilityInfo(
                description='Mimikatz sekurlsa::logonpasswords.',
                type=m.VulnerabilityType.LOCAL,
                outcome=m.LeakedCredentials(credentials=[
                    m.CachedCredential(node='4',
                                       port="SSH",
                                       credential="SSHCreds")]),
                rates=m.Rates(probingDetectionRate=0,
                              exploitDetectionRate=1.0,
                              successRate=1.0),
                URL='https://github.com/gentilkiwi/mimikatz',
                reward_string=''
            ),
            RDPBF=m.VulnerabilityInfo(
                description='RDP Brute Force',
                type=m.VulnerabilityType.REMOTE,
                outcome=m.SystemEscalation(),
                rates=m.Rates(probingDetectionRate=0,
                              exploitDetectionRate=0.2,
                              successRate=1.0),
                URL='https://attack.mitre.org/techniques/T1110/',
                reward_string=''
            ),
            RecentlyAccessedMachines=m.VulnerabilityInfo(
                description='AzureVM info, including public IP address',
                type=m.VulnerabilityType.LOCAL,
                outcome=m.LeakedNodesId(['6', '3', '4']),
                rates=m.Rates(probingDetectionRate=0.0,
                              exploitDetectionRate=0.0,
                              successRate=1.0),
                URL='',
                reward_string=''
            ))
    ),
    '6': m.NodeInfo(
        services=[m.ListeningService("HTTP", allowedCredentials=["HTTPCreds"])],
        value=11,
        properties=["GuestAccountEnabled", "Win7", "Linux", "SMB", "Azure-VM", "PortRDPOpen", "HTTP", "Win10"],
        agent_installed=False,
        privilege_level=m.PrivilegeLevel.NoAccess,
        reimagable=True,
        last_reimaging=None,
        owned_string='',
        sla_weight=1.0,
        firewall=m.FirewallConfiguration(outgoing=[m.FirewallRule("HyperV-VM", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SMB", m.RulePermission.ALLOW),
                                                   m.FirewallRule("RDP", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Win10", m.RulePermission.ALLOW),
                                                   m.FirewallRule("PortRDPOpen", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Windows", m.RulePermission.ALLOW),
                                                   m.FirewallRule("GuestAccountEnabled", m.RulePermission.ALLOW),
                                                   m.FirewallRule("WMI", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SQL", m.RulePermission.ALLOW),
                                                   m.FirewallRule("HTTP", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Win7", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Linux", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SSH", m.RulePermission.ALLOW),
                                                   ],
                                         incoming=[m.FirewallRule("Windows", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SSH", m.RulePermission.ALLOW),
                                                   m.FirewallRule("RDP", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Azure-VM", m.RulePermission.ALLOW),
                                                   m.FirewallRule("HTTP", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Win7", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SMB", m.RulePermission.ALLOW),
                                                   ]),
        vulnerabilities=dict(
            UACME67=m.VulnerabilityInfo(
                description='UACME UAC bypass #67 (fake system escalation) ',
                type=m.VulnerabilityType.LOCAL,
                outcome=m.SystemEscalation(),
                rates=m.Rates(probingDetectionRate=0,
                              exploitDetectionRate=0.2,
                              successRate=1.0),
                URL='https://github.com/hfiref0x/UACME',
                reward_string=''
            ),
            MimikatzLogonpasswords=m.VulnerabilityInfo(
                description='Mimikatz sekurlsa::logonpasswords.',
                type=m.VulnerabilityType.LOCAL,
                outcome=m.LeakedCredentials(credentials=[
                    m.CachedCredential(node='7',
                                       port="RDP",
                                       credential="RDPCreds")]),
                rates=m.Rates(probingDetectionRate=0,
                              exploitDetectionRate=1.0,
                              successRate=1.0),
                URL='https://github.com/gentilkiwi/mimikatz',
                reward_string=''
            ),
            RecentlyAccessedMachines=m.VulnerabilityInfo(
                description='AzureVM info, including public IP address',
                type=m.VulnerabilityType.LOCAL,
                outcome=m.LeakedNodesId(['7', '2', '5']),
                rates=m.Rates(probingDetectionRate=0.0,
                              exploitDetectionRate=0.0,
                              successRate=1.0),
                URL='',
                reward_string=''
            ))
    ),
    '7': m.NodeInfo(
        services=[m.ListeningService("RDP", allowedCredentials=["RDPCreds"])],
        value=8,
        properties=["RDP"],
        agent_installed=False,
        privilege_level=m.PrivilegeLevel.NoAccess,
        reimagable=True,
        last_reimaging=None,
        owned_string='',
        sla_weight=1.0,
        firewall=m.FirewallConfiguration(outgoing=[m.FirewallRule("HTTP", m.RulePermission.ALLOW),
                                                   m.FirewallRule("RDP", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SMB", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Win10", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Win7", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SSH", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SQL", m.RulePermission.ALLOW),
                                                   m.FirewallRule("WMI", m.RulePermission.ALLOW),
                                                   m.FirewallRule("HyperV-VM", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Windows", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Azure-VM", m.RulePermission.ALLOW),
                                                   m.FirewallRule("GuestAccountEnabled", m.RulePermission.ALLOW),
                                                   ],
                                         incoming=[m.FirewallRule("HTTP", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Windows", m.RulePermission.ALLOW),
                                                   m.FirewallRule("GuestAccountEnabled", m.RulePermission.ALLOW),
                                                   m.FirewallRule("HTTPS", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Azure-VM", m.RulePermission.ALLOW),
                                                   m.FirewallRule("PortRDPOpen", m.RulePermission.ALLOW),
                                                   m.FirewallRule("RDP", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Win10", m.RulePermission.ALLOW),
                                                   m.FirewallRule("HyperV-VM", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SSH", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Linux", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SQL", m.RulePermission.ALLOW),
                                                   m.FirewallRule("SMB", m.RulePermission.ALLOW),
                                                   m.FirewallRule("Win7", m.RulePermission.ALLOW),
                                                   ]),
        vulnerabilities=dict(
            RecentlyAccessedMachines=m.VulnerabilityInfo(
                description='AzureVM info, including public IP address',
                type=m.VulnerabilityType.LOCAL,
                outcome=m.LeakedNodesId(['6', '4', '1']),
                rates=m.Rates(probingDetectionRate=0.0,
                              exploitDetectionRate=0.0,
                              successRate=1.0),
                URL='',
                reward_string=''
            ))
    ),

}

global_vulnerability_library: Dict[VulnerabilityID, VulnerabilityInfo] = dict([])


def new_environment() -> m.Environment:
    return m.Environment(
        network=m.create_network(nodes),
        vulnerability_library=global_vulnerability_library,
        identifiers=m.SAMPLE_IDENTIFIERS2
    )
